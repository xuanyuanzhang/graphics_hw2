#version 330

in vec2 outTexCoord;

out vec4 fragColor;

struct Attenuation
{
    float constant;
    float linear;
    float exponent;
};

struct PointLight
{
    vec3 colour;
    // Light position is assumed to be in view coordinates
    vec3 position;
    float intensity;
    Attenuation att;
};

struct DirectionalLight
{
    vec3 colour;
    vec3 direction;
    float intensity;
};

struct Material
{
    vec3 colour;
    int useColour;
    float reflectance;
};

uniform sampler2D texture_sampler;
uniform vec3 ambientLight;
uniform float specularPower;
uniform Material material;
uniform PointLight pointLight;
uniform DirectionalLight directionalLight;

void main()
{
	//ivec2 size = textureSize(texture_sampler,0);
	float indexSum = floor(outTexCoord.x) + floor(outTexCoord.y);
	bool isEven = mod(indexSum,2.0) == 1.0;
	vec4 evenGrid = vec4(0.0,0.0,0.0,1.0);
	vec4 oddGrid = vec4(1.0,1.0,1.0,1.0);
	fragColor = ((isEven) ? evenGrid : oddGrid);
}